/*
	
	breakpoints.fab 1.3
	
*/


/* --- VARS --- */

// Breakpoints
$breakpoints: 1280, 1024, 1000;

// Display
$displays: inline-block, flex;

/* --- CLASSES --- */

[class*='bp-'] {
	display: none !important;	
}

// Breakpoints
@each $breakpoint in $breakpoints {
  
  $bp: nth($breakpoint, 1);
  
  @media all and (max-width: #{$bp}px) {
    
    .bp-max#{$bp} {
      display: block !important;
      @each $display in $displays {
	      $dspl: nth($display, 1);
	      &.bp-#{$dspl} {
		      display: $dspl !important;
	      }
	    }
    }

  }
  
  @media all and (min-width: #{$bp + 1}px) {
    
    .bp-min#{$bp} {
      display: block !important;
      @each $display in $displays {
	      $dspl: nth($display, 1);
	      &.bp-#{$dspl} {
		      display: $dspl !important;
	      }
	    }
    }

  }
	
}

// Breakpoints max/min
@each $breakpoint in $breakpoints {
  
  $bp1: nth($breakpoint, 1);
  
  @each $breakpoint in $breakpoints {
  	
  	$bp2: nth($breakpoint, 1);
  	
  	@if $bp1 > $bp2 {
	  	
	  	@media all and (max-width: #{$bp1}px) and (min-width: #{$bp2 + 1}px) {
	    
		    .bp-max#{$bp1}-min#{$bp2}, .bp-min#{$bp2}-max#{$bp1} {
		      display: block !important;
		      @each $display in $displays {
			      $dspl: nth($display, 1);
			      &.bp-#{$dspl} {
				      display: $dspl !important;
			      }
			    }
		    }
		
		  }
	  		
  	}
	
	}
	
}